FROM docker-registry.me.sap.corp/qa/node6-lts
EXPOSE 80 443

#pre npm install
RUN npm install -g eslint gulp-cli hdb karma-cli
RUN mkdir -p /data/default_frontend_npm
COPY ./package.json /data/default_frontend_npm/package.json
RUN cd /data/default_frontend_npm/ && npm install

#Build arguments
ARG ENV=dev
ARG SRC=local
ARG TAG=latest
ARG TIME

RUN printf "Infragate frontend build log\n - Argument ENV=${ENV}\n - Argument SRC=${SRC}\n - Argument TAG=${TAG}\n - Argument TIME=${TIME}\n" > /infragate-frontend_build.log

#git clone
RUN cd /data && if [ "${SRC}" = "master" ]; then git clone ssh://TrexService@hdbgerrit.wdf.sap.corp:29418/infra_gate; else  git clone ssh://TrexService@hdbgerrit.wdf.sap.corp:29418/infra_gate -b ${SRC}; fi

#link nginx file
RUN if [ "${ENV}" = "prod" ]; then ln -s /data/infra_gate/frontend/infragate.me.sap.corp.conf /etc/nginx/vhosts.d/infragate.me.sap.corp.conf; else ln -s /data/infra_gate/frontend/infragate-${ENV}.me.sap.corp.conf /etc/nginx/vhosts.d/infragate.me.sap.corp.conf; fi

#copy pre-installed node_modules to frontend folder
RUN rsync -a /data/default_frontend_npm/node_modules /data/infra_gate/frontend/

#npm install
RUN cd /data/infra_gate/frontend && npm install

#write build log
RUN printf "{\"env\": \"${ENV}\", \"src\": \"${SRC}\", \"tag\": \"${TAG}\", \"buildtime\": \"${TIME}\"}" > /data/infra_gate/frontend/webapp/build_log.json

#gulp build
RUN cd /data/infra_gate/frontend && gulp build

RUN printf "\nBuild Success.\n" >> /infragate-frontend_build.log
